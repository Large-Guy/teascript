class Vector
{
    new(x=0, y=0)
    {
        self.x = x
        self.y = y
    }

    + (a, b)
    {
        assert(a is Vector and b is Vector, "wrong argument type")

        return Vector.new(a.x + b.x, a.y + b.y)
    }

    - (a, b)
    {
        if not b { return Vector(-a.x, -a.y) }

        assert(a is Vector and b is Vector, "wrong argument type")

        return Vector.new(a.x - b.x, a.y - b.y)
    }

    * (a, b)
    {
        if b is Number { return Vector(a.x * b, a.y * b) }

        assert(a is Vector and b is Vector, "wrong argument type")

        return Vector.new(a.x * b.x, a.y * b.y)
    }

    / (a, b)
    {
        assert(a is Vector and b is Vector, "wrong argument type")

        return Vector.new(a.x / b.x, a.y / b.y)
    }

    == (a, b)
    {
        assert(a is Vector and b is Vector, "wrong argument type")

        return a.x == b.x and a.y == b.y
    }

    [] (index)
    {
        return (index % 2) == 0 ? self.x : self.y
    }

    []= (index, value)
    {   
        return index == 0 ? self.x = value : self.y = value
    }

    tostring()
    {
        return '(${self.x}, ${self.y})'
    }
}

var a = Vector.new(2, 3)
print(a)
print(a[0])
print(a[1])

var b = Vector.new(4, 4)

print(b)
print(a + b)
print(a != b)

a[0] = 1
print(a[0])

a[0] += 12
print(a[0])